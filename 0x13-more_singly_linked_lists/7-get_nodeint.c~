#include "lists.h"


/**
 *get_nodeint_at_index - function to get a node at a given index
 *@head: supposed pointer to the head node
 *@index: node at index to be gotten
 *
 *Return: node at the given index if successful else NULL
 */

listint_t *get_nodeint_at_index(listint_t *head, unsigned int index)
{
	unsigned int n = 0;
/*	listint_t  *temp;*/

	if (!head)
	{
		return (NULL);
	}

	/*if head->next is null and list lenth > index*/
	if (listint_len(head) > index)
		return (NULL);

	while(head)
	{
		if (n == index)
		{
			return (head);
		}
		n++;
		head = head->next;
	}

	return (NULL);


}



/**
 *listint_len - function that counts the number of nodes
 * in a singly linled list
 *
 *@h: pointer to start point from where the counting starts
 *
 *Return: number of nodes in the list
 */

size_t listint_len(const listint_t *h)
{
        size_t rv = 0;

        if (h)
        {
                while (h)
                {
                        rv++;
                        h = h->next;
                }
        }
        return (rv);
}

